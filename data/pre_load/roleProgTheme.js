const {
    EmbedBuilder,
    ActionRowBuilder,
    ButtonBuilder,
    ChatInputCommandInteraction, parseEmoji, AttachmentBuilder
} = require("discord.js");
const {banniere, couleurs, roles} = require("../../api/permanent.js");

const rolesNotif = [
    {
        roleID: "agriculture_environement",
        emoji: "üåæ",
        description: "√âquipe responsable portant sur l‚Äôagriculture, l‚Äôalimentation, l‚Äôenvironnement, la mer, les for√™ts, la biodiversit√©."
    },
    {
        roleID: "social",
        emoji: "üë´",
        description: "√âquipe responsable portant sur es questions sociales et soci√©tales: droits animaux et humains, √©galit√© homme-femme, discriminations, personnes √¢g√©es, retraites, handicap, culture, sport, enfance, famille."
    },
    {
        roleID: "sante",
        emoji: "ü´Ä",
        description: "√âquipe responsable portant sur les questions de sant√©, de ses acteurs, de ses infrastructures, de l'acc√®s au syst√®me de sant√© ainsi que de son organisation."
    },
    {
        roleID: "economie",
        emoji: "üí∞",
        description: "√âquipe responsable portant sur les questions √©conomiques, la fiscalit√©, le travail, le commerce ext√©rieur, le tourisme, l‚Äôindustrie, ainsi que les questions d'in√©galit√©s √©conomiques."
    },
    {
        roleID: "international",
        emoji: "üåç",
        description: "√âquipe responsable portant sur les relations, coop√©rations et politiques internationales et europ√©ennes, et sur la d√©fense."
    },
    {
        roleID: "numerique",
        emoji: "üñ•Ô∏è",
        description: "√âquipe responsable portant sur le num√©rique et l‚Äôintelligence artificielle: risques et opportunit√©s, impact soci√©tal et environnemental, r√®glementations, transformation num√©rique de la fonction publique, in√©galit√© num√©rique."
    },
    {
        roleID: "energie",
        emoji: "‚ö°",
        description: "√âquipe responsable portant sur les modalit√©s de production, de stockage, de transport et de consommation de l'√©nergie."
    },
    {
        roleID: "democratie",
        emoji: "üóΩ",
        description: "√âquipe responsable portant sur les questions de gouvernance et de d√©mocratie, le renouveau d√©mocratique, les modalit√©s d‚Äô√©lection, le r√©f√©rendum, les conventions citoyennes."
    },
    {
        roleID: "cohesion",//securite-justice
        emoji: "ü§ù",
        description: "√âquipe responsable portant sur la s√©curit√© int√©rieure, la justice, l'immigration, le droit d‚Äôasile."
    },
    {
        roleID: "education",
        emoji: "üìñ",
        description: "√âquipe responsable portant sur l'√©ducation, l'enseignement sup√©rieur, la recherche et la formation tout au long de la vie."
    },
    {
        roleID: "transport",
        emoji: "üöÖ",
        description: "√âquipe responsable portant sur les modalit√©s, les √©quipements, les infrastructures de transport et de mobilit√©."
    }
    ,
    {
        roleID: "logement",
        emoji: "üèòÔ∏è",
        description: "√âquipe responsable portant sur ‚Äôacc√®s au logement, la r√©novation √©nerg√©tique, l‚Äôurbanisme et l‚Äôam√©nagement du territoire (en lien avec transport, √©conomie, environnement)."
    }
];
const nbPerRow = 3;

/**
 * @param {ChatInputCommandInteraction} interaction
 */
module.exports.send = async (interaction) => {
    console.log(rolesNotif.slice(0, 4).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n").length);
    console.log(rolesNotif.slice(4, 7).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n").length);
    console.log(rolesNotif.slice(7, 12).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n").length);
    const contri = new AttachmentBuilder('./data/images/contribuer.png', {name: 'contribuer.png'});
    return {
        embeds: [new EmbedBuilder()
            .setDescription(`# __Contribuez en rejoignant les √©quipes th√©matiques :__\nPour aider √† la cr√©ation et au maintient du programme, par th√®me.\nUtilisez les boutons ci-dessous pour rejoindre une √©quipe.\nResponsables : <@&${roles.responsable_programme}>, <@&${roles.coordination_programme}> et les responsables th√©matiques.`)
            .setColor(couleurs.jaune)
            .setThumbnail(banniere.link)
            .setImage(`attachment://contribuer.png`)
            .addFields({
                    name: "__Liste des r√¥les :__",
                    value: rolesNotif.slice(0, 4).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n"),
                },
                {
                    name: "** **",
                    value: rolesNotif.slice(4, 7).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n"),
                },
                {
                    name: "** **",
                    value: rolesNotif.slice(7, 12).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n"),
                })
            .setFooter({text: "Cliquez sur les boutons ci-dessous pour vous ajouter/retirer des roles."})],
        components: actionRaw(rolesNotif, interaction),
        files: [banniere.file(), contri]
    };
}

function actionRaw(rolesNotif, interaction) {
    const tab = [];
    const raws = Math.min(Math.ceil(rolesNotif.length / nbPerRow), 5);
    for (let index = 0; index < raws; index++) {
        tab.push(new ActionRowBuilder().addComponents(rolesNotif.slice(nbPerRow * index, nbPerRow * (index + 1)).map((role) => {
            return new ButtonBuilder()
                .setCustomId(`contribuer:${role.roleID}`)
                .setEmoji(parseEmoji(role.emoji))
                .setLabel(interaction.guild.roles.cache.get(roles[role.roleID]).name)
                .setStyle(2);
        })));
    }
    return tab;
}