const {
    EmbedBuilder,
    ActionRowBuilder,
    ButtonBuilder,
    ChatInputCommandInteraction, parseEmoji, AttachmentBuilder
} = require("discord.js");
const {banniere, couleurs, roles} = require("../../api/permanent.js");

const rolesNotif = [
    {
        roleID: "environement",
        emoji: "üåæ",
        description: "> Agriculture & Alimentation\n> For√™ts & milieux naturels\n> P√™che & Domaine Maritime\n> Biodiversit√©."
    },
    {
        roleID: "social",
        emoji: "üôÜ",
        description: "> Logement\n> Sant√©\n> √âducation\n> Culture"
    },
    {
        roleID: "economie",
        emoji: "üí∞",
        description: "> Syst√®me √©conomique, mon√©taire et financier\n> Administrations & Finances Publiques\n> Entreprises\n> Travail & Emploi"
    },
    {
        roleID: "international",
        emoji: "üåç",
        description: "> D√©fense\n> Union europ√©enne\n> G√©opolitique & diplomatie\n> Flux migratoires"
    },
    {
        roleID: "technique",
        emoji: "üîß",
        description: "> √ânergie\n> Num√©rique\n> Industrie\n> Transport"
    },
    {
        roleID: "democratie",
        emoji: "üóΩ",
        description: "> Institutions\n> Citoyennet√© & Identit√©\n> Justice\n> M√©dias"
    },
    {
        roleID: "cohesion",
        emoji: "ü§ù",
        description: "> S√©curit√© & Appareil judiciaire\n> Immigration\n> Discriminations\n> La√Øcit√©"
    }
];
const nbPerRow = 4;

/**
 * @param {ChatInputCommandInteraction} interaction
 */
module.exports.send = async (interaction) => {
    console.log(rolesNotif.slice(0, nbPerRow).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n").length);
    console.log(rolesNotif.slice(nbPerRow, nbPerRow*2).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> : ${role.description}`).join("\n").length);
    const contri = new AttachmentBuilder('./data/images/contribuer.png', {name: 'contribuer.png'});
    return {
        embeds: [new EmbedBuilder()
            .setDescription(`# __Contribuez en rejoignant les √©quipes th√©matiques :__\nPour aider √† la cr√©ation et au maintien du programme, par th√®me.\nUtilisez les boutons ci-dessous pour rejoindre une √©quipe.\nResponsables : <@&${roles.responsable_programme}>.\nVous pouvez trouvez qui sont les responsables de chaque th√®me dans les salons forums associ√© (post √©pingl√©).`)
            .setColor(couleurs.jaune)
            .setThumbnail(banniere.link)
            .setImage(`attachment://contribuer.png`)
            .addFields({
                    name: "__Liste des r√¥les (domaines) :__",
                    value: rolesNotif./*slice(0, nbPerRow).*/map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> :\n${role.description}`).join("\n"),
                }/*,
                {
                    name: "** **",
                    value: rolesNotif.slice(nbPerRow, nbPerRow*2).map((role) => `- ${role.emoji}„Éª<@&${roles[role.roleID]}> :\n${role.description}`).join("\n"),
                }*/)
            .setFooter({text: "Cliquez sur les boutons ci-dessous pour vous ajouter/retirer des roles."})],
        components: actionRaw(rolesNotif, interaction),
        files: [banniere.file(), contri]
    };
}

function actionRaw(rolesNotif, interaction) {
    const tab = [];
    const raws = Math.min(Math.ceil(rolesNotif.length / nbPerRow), 5);
    for (let index = 0; index < raws; index++) {
        tab.push(new ActionRowBuilder().addComponents(rolesNotif.slice(nbPerRow * index, nbPerRow * (index + 1)).map((role) => {
            return new ButtonBuilder()
                .setCustomId(`contribuer:${role.roleID}`)
                .setEmoji(parseEmoji(role.emoji))
                .setLabel(interaction.guild.roles.cache.get(roles[role.roleID]).name)
                .setStyle(2);
        })));
    }
    return tab;
}